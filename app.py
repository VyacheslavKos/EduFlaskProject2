from flask import Flask
from flask import render_template

from flask_wtf import FlaskForm

from wtforms import StringField
from wtforms import HiddenField
from wtforms import SubmitField
from wtforms import RadioField

from wtforms.validators import InputRequired

import json

import os

import random

app = Flask(__name__)
app.secret_key = "randomstring777"

# –ó–∞–¥–∞–µ–º —Å–ª–æ–≤–∞—Ä–∏–∫–∏ –¥–ª—è —É–¥–æ–±—Å—Ç–≤–∞ –≤—ã–≤–æ–¥–∞ –≤ —à–∞–±–ª–æ–Ω–∞—Ö

days = {'mon': '–ü–æ–Ω–µ–¥–µ–ª—å–Ω–∏–∫', 'tue': '–í—Ç–æ—Ä–Ω–∏–∫', 'wed': '–°—Ä–µ–¥–∞', 'thu': '–ß–µ—Ç–≤–µ—Ä–≥', 'fri': '–ü—è—Ç–Ω–∏—Ü–∞', 'sat': '–°—É–±–±–æ—Ç–∞',
        'sun': '–í–æ—Å–∫—Ä–µ—Å–µ–Ω—å–µ'}
pics = {'travel': '‚õ±', 'study': 'üè´', 'work': 'üè¢', 'relocate': 'üöú', 'programming': '‚úå'}

# –û–ø—Ä–µ–¥–µ–ª—è–µ–º –∫–ª–∞—Å—Å—ã –ø–æ–¥ –¥–≤–µ —Ñ–æ—Ä–º—ã –±—Ä–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏—è (Booking) –∏ –∑–∞–ø—Ä–æ—Å–∞ (Request)


class BookingForm(FlaskForm):
    clientName = StringField("–í–∞—Å –∑–æ–≤—É—Ç", [InputRequired()])
    clientPhone = StringField("–í–∞—à —Ç–µ–ª–µ—Ñ–æ–Ω", [InputRequired()])
    clientWeekday = HiddenField()
    clientTime = HiddenField()
    clientTeacher = HiddenField()
    submit = SubmitField('–ó–∞–ø–∏—Å–∞—Ç—å—Å—è –Ω–∞ –ø—Ä–æ–±–Ω—ã–π —É—Ä–æ–∫')


class RequestForm(FlaskForm):
    clientGoal = RadioField('–¶–µ–ª—å', choices=[('–î–ª—è –ø—É—Ç–µ—à–µ—Å—Ç–≤–∏–π', '–î–ª—è –ø—É—Ç–µ—à–µ—Å—Ç–≤–∏–π'), ('–î–ª—è —É—á–µ–±—ã', '–î–ª—è —É—á–µ–±—ã'),
                                             ('–î–ª—è —Ä–∞–±–æ—Ç—ã', '–î–ª—è —Ä–∞–±–æ—Ç—ã'), ('–î–ª—è –ø–µ—Ä–µ–µ–∑–¥–∞', '–î–ª—è –ø–µ—Ä–µ–µ–∑–¥–∞'),
                                             ('–î–ª—è –ø—Ä–æ–≥—Ä–∞–º–º–∏—Ä–æ–≤–∞–Ω–∏—è', '–î–ª—è –ø—Ä–æ–≥—Ä–∞–º–º–∏—Ä–æ–≤–∞–Ω–∏—è')],
                            default='–î–ª—è –ø—É—Ç–µ—à–µ—Å—Ç–≤–∏–π')
    clientWeektime = RadioField('–í—Ä–µ–º—è', choices=[('1-2 —á–∞—Å–∞ –≤ –Ω–µ–¥–µ–ª—é', '1-2 —á–∞—Å–∞ –≤ –Ω–µ–¥–µ–ª—é'),
                                                  ('3-5 —á–∞—Å–æ–≤ –≤ –Ω–µ–¥–µ–ª—é', '3-5 —á–∞—Å–æ–≤ –≤ –Ω–µ–¥–µ–ª—é'),
                                                  ('5-7 —á–∞—Å–æ–≤ –≤ –Ω–µ–¥–µ–ª—é', '5-7 —á–∞—Å–æ–≤ –≤ –Ω–µ–¥–µ–ª—é'),
                                                  ('7-10 —á–∞—Å–æ–≤ –≤ –Ω–µ–¥–µ–ª—é', '7-10 —á–∞—Å–æ–≤ –≤ –Ω–µ–¥–µ–ª—é')],
                                default='1-2 —á–∞—Å–∞ –≤ –Ω–µ–¥–µ–ª—é')
    clientName = StringField("–í–∞—Å –∑–æ–≤—É—Ç", [InputRequired()])
    clientPhone = StringField("–í–∞—à —Ç–µ–ª–µ—Ñ–æ–Ω", [InputRequired()])
    submit = SubmitField('–ù–∞–π–¥–∏—Ç–µ –º–Ω–µ –ø—Ä–µ–ø–æ–¥–∞–≤–∞—Ç–µ–ª—è')


@app.route('/')
def re_main():
    # –í—ã–±–∏—Ä–∞–µ–º –ø—Ä–æ–∏–∑–≤–æ–ª—å–Ω—ã–µ 6 –ø—Ä–µ–ø–æ–¥–∞–≤–∞—Ç–µ–ª–µ–π –∏ –æ—Ç–ø—Ä–∞–≤–ª—è–µ–º –∏—Ö –≤ —à–∞–±–ª–æ–Ω
    random_teachers = []
    with open("json/teachers.json", "r") as f:
        teachers = json.load(f)
    with open("json/goals.json", "r") as f:
        goals = json.load(f)
    random.shuffle(teachers)
    for teacher in teachers:
        if len(random_teachers) < 6:
            random_teachers.append(teacher)
    return render_template('index.html', pics=pics, goals=goals, random_teachers=random_teachers)


@app.route('/goals/<goal>/')
def re_goals(goal):
    # –§–∏–ª—å—Ç—Ä—É–µ–º –ø—Ä–µ–ø–æ–¥–∞–≤–∞—Ç–µ–ª–µ–π –ø–æ –ø—Ä–∏–Ω–∞–¥–ª–µ–∂–Ω–æ—Å—Ç–∏ –∫ —Ü–µ–ª–∏ –∑–∞–∫–∞–∑—á–∏–∫–∞ –∏ –ø–µ—Ä–µ–¥–∞–µ–º –≤ —à–∞–±–ª–æ–Ω
    goal_teachers = []
    with open("json/teachers.json", "r") as f:
        teachers = json.load(f)
    with open("json/goals.json", "r") as f:
        goals = json.load(f)
    for teacher in teachers:
        if goal in teacher['goals']:
            goal_teachers.append(teacher)
    return render_template('goal.html', goal_teachers=goal_teachers, goal=goal, goals=goals, pics=pics)


@app.route('/profiles/<int:id_teacher>/')
def re_profiles(id_teacher):
    # –§–∏–ª—å—Ç—Ä—É–µ–º –∫–æ–Ω–∫—Ä–µ—Ç–Ω–æ–≥–æ –ø—Ä–µ–ø–æ–¥–∞–≤–∞—Ç–µ–ª—è –∏ –ø–µ—Ä–µ–¥–∞–µ–º –µ–≥–æ –≤ —à–∞–±–ª–æ–Ω –ø–æ–¥—Ä–æ–±–Ω–æ–π —Å—Ç—Ä–∞–Ω–∏—á–∫–∏ –ø–æ –ø—Ä–µ–ø–æ–¥—É
    with open("json/teachers.json", "r") as f:
        teachers = json.load(f)
    with open("json/goals.json", "r") as f:
        goals = json.load(f)
    for teacher in teachers:
        if id_teacher == teacher['id']:
            return render_template('profile.html', teacher=teacher, goals=goals, days=days)


@app.route('/request/', methods=["GET", "POST"])
def re_request():
    # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º/–ø–æ–ª—É—á–∞–µ–º —Ñ–æ—Ä–º—É –∑–∞–ø—Ä–æ—Å–∞ –Ω–∞ –ø—Ä–µ–ø–æ–¥–∞–≤–∞—Ç–µ–ª—è —á–µ—Ä–µ–∑ –≤–∞–ª–∏–¥–∞—Ü–∏—é
    form = RequestForm()
    if form.validate_on_submit():
        clientGoal = form.clientGoal.data
        clientWeektime = form.clientWeektime.data
        clientName = form.clientName.data
        clientPhone = form.clientPhone.data
        # –§–æ—Ä–º–∏—Ä—É–µ–º json-—Ñ–∞–π–ª —Å –∑–∞–ø—Ä–æ—Å–∞–º–∏ —Å –ø—Ä–æ–≤–µ—Ä–∫–æ–π –Ω–∞ –ø—É—Å—Ç–æ—Ç—É –∏ –∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–º –∑–∞–Ω–µ—Å–µ–Ω–∏–µ–º
        if os.stat("json/request.json").st_size == 0:
            with open("json/request.json", "w") as f:
                records = [{'clientGoal': clientGoal, 'clientWeektime': clientWeektime, 'clientName': clientName,
                            'clientPhone': clientPhone}]
                json.dump(records, f)
        else:
            with open("json/request.json", "r") as f:
                records = json.load(f)
            records.append({'clientGoal': clientGoal, 'clientWeektime': clientWeektime, 'clientName': clientName,
                            'clientPhone': clientPhone})
            with open("json/request.json", "w") as f:
                json.dump(records, f)
        return render_template('request_done.html', clientGoal=clientGoal, clientWeektime=clientWeektime,
                               clientName=clientName, clientPhone=clientPhone)
    return render_template('request.html', form=form)


@app.route('/booking/<int:id_teacher>/<day>/<time>/', methods=["GET", "POST"])
def re_booking(id_teacher, day, time):
    # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º/–ø–æ–ª—É—á–∞–µ–º —Ñ–æ—Ä–º—É –±—Ä–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏—è –ø—Ä–µ–ø–æ–¥–∞–≤–∞—Ç–µ–ª—è —á–µ—Ä–µ–∑ –≤–∞–ª–∏–¥–∞—Ü–∏—é
    form = BookingForm()
    if form.validate_on_submit():
        clientName = form.clientName.data
        clientPhone = form.clientPhone.data
        clientWeekday = form.clientWeekday.data
        clientTime = form.clientTime.data
        clientTeacher = int(form.clientTeacher.data)
        # –ò—Å–∫–ª—é—á–∞–µ –∏–∑ —Ñ–∞–π–ª–∞ json —Å –ø—Ä–µ–ø–æ–¥–∞–≤–∞—Ç–µ–ª—è–º–∏ –∑–∞–±—Ä–æ–Ω–∏—Ä–æ–≤–∞–Ω–Ω–æ–µ –≤—Ä–µ–º—è
        with open("json/teachers.json", "r") as f:
            teachers = json.load(f)
        for teacher in teachers:
            if clientTeacher == teacher['id']:
                for day, time in teacher['free'].items():
                    if day == clientWeekday:
                        time[clientTime] = False
        with open("json/teachers.json", "w") as f:
            json.dump(teachers, f)
        # –§–æ—Ä–º–∏—Ä—É–µ–º json-—Ñ–∞–π–ª —Å –¥–∞–Ω–Ω—ã–º–∏ –±—Ä–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏—è —Å –ø—Ä–æ–≤–µ—Ä–∫–æ–π –Ω–∞ –ø—É—Å—Ç–æ—Ç—É –∏ –∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–º –∑–∞–Ω–µ—Å–µ–Ω–∏–µ–º
        if os.stat("json/booking.json").st_size == 0:
            with open("json/booking.json", "w") as f:
                records = [{'clientName': clientName, 'clientPhone': clientPhone, 'clientWeekday': clientWeekday,
                            'clientTime': clientTime, 'clientTeacher': clientTeacher}]
                json.dump(records, f)
        else:
            with open("json/booking.json", "r") as f:
                records = json.load(f)
            records.append({'clientName': clientName, 'clientPhone': clientPhone, 'clientWeekday': clientWeekday,
                            'clientTime': clientTime, 'clientTeacher': clientTeacher})
            with open("json/booking.json", "w") as f:
                json.dump(records, f)
        return render_template('booking_done.html', clientName=clientName, clientPhone=clientPhone,
                               clientWeekday=clientWeekday, clientTime=clientTime, days=days)
    # –§–∏–ª—å—Ç—Ä—É–µ–º –Ω—É–∂–Ω–æ–≥–æ –ø—Ä–µ–ø–æ–¥–∞–≤–∞—Ç–µ–ª—è
    with open("json/teachers.json", "r") as f:
        teachers = json.load(f)
    for teacher in teachers:
        if id_teacher == teacher['id']:
            return render_template('booking.html', teacher=teacher, day=day, time=time, days=days, form=form)


@app.route('/all/')
def re_all():
    # –í—ã–≤–æ–¥ –≤—Å–µ—Ö –ø—Ä–µ–ø–æ–¥–æ–≤–∞—Ç–µ–ª–µ–π –∏–∑ –±–∞–∑—ã
    with open("json/teachers.json", "r") as f:
        teachers = json.load(f)
    with open("json/goals.json", "r") as f:
        goals = json.load(f)
    return render_template('all.html', pics=pics, goals=goals, teachers=teachers)


if __name__ == '__main__':
    app.run()
